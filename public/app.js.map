{"version":3,"sources":["app/App.js","app/components/HeaderMenu/HeaderMenu.js","app/containers/Home/Home.js","app/containers/Login/Login.js","app/containers/NotFound/NotFound.js","app/containers/Register/Register.js","app/initialize.js","app/utils/storage.js"],"names":["App","props","children","Component","HeaderMenu","state","activeItem","isLoading","isLoggedIn","token","obj","setState","history","push","fetch","then","res","json","success","userData","e","name","localStorage","removeItem","signInError","handleClick","bind","handleLogout","NavLink","Home","console","log","data","Login","loginError","email","password","value","method","headers","body","JSON","stringify","message","handleChange","onLogin","NotFound","Register","signUpError","registrationSuccess","passwordValidation","onSignUp","ReactDOM","render","document","querySelector","getFromStorage","setInStorage","key","valueStr","getItem","parse","err","error","setItem"],"mappings":"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","file":"public/app.js","sourcesContent":["'use strict';\n\nimport React, { Component } from 'react';\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\trender() {\n\t\treturn <div>{this.props.children}</div>;\n\t}\n}\n\nexport default App;\n","\"use strict\";\n\nimport { withRouter, NavLink } from \"react-router-dom\";\nimport React, { Component } from \"react\";\n\nimport { Menu } from \"semantic-ui-react\";\n\nimport { getFromStorage } from \"./../../utils/storage\";\n\nclass HeaderMenu extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            activeItem: \"home\",\n            isLoading: true,\n            isLoggedIn: false,\n            token: \"\"\n        };\n    }\n\n    componentDidMount() {\n        const obj = getFromStorage(\"botany-bay\");\n\n        if (obj && obj.token !== \"\") {\n        } else {\n            this.setState({ isLoggedIn: false });\n            return this.props.history.push(\"/login\");\n        }\n\n        if (obj && obj.token) {\n            const { token } = obj;\n\n            // Verify token\n            fetch(\"/api/Prototype/user/verify?token=\" + token)\n                .then(res => res.json())\n                .then(json => {\n                    if (json.success) {\n                        this.setState({\n                            token,\n                            isLoggedIn: true,\n                            isLoading: false\n                        });\n                    } else {\n                        this.setState({\n                            isLoading: false,\n                            isLoggedIn: false,\n                            userData: []\n                        });\n                    }\n                });\n        } else {\n            this.setState({\n                isLoading: false\n            });\n        }\n    }\n\n    handleClick(e, { name }) {\n        this.setState({ activeItem: name });\n    }\n\n    handleLogout() {\n        this.setState({\n            isLoading: true\n        });\n\n        const obj = getFromStorage(\"botany-bay\");\n\n        if (obj && obj.token) {\n            const { token } = obj;\n\n            // Verify token\n            fetch(\"/api/Prototype/user/logout?token=\" + token)\n                .then(res => res.json())\n                .then(json => {\n                    if (json.success) {\n                        localStorage.removeItem(\"botany-bay\");\n\n                        this.setState(\n                            {\n                                token: \"\",\n                                signInError: \"\",\n                                isLoading: false\n                            },\n                            () => {\n                                return this.props.history.push(\"/\");\n                            }\n                        );\n                    } else {\n                        this.setState({\n                            isLoading: false\n                        });\n                    }\n                });\n        } else {\n            this.setState({\n                isLoading: false\n            });\n        }\n    }\n\n    render() {\n        const { activeItem, isLoggedIn } = this.state;\n\n        return (\n            <Menu secondary stackable>\n                <Menu.Item header>Shipyard</Menu.Item>\n                <Menu.Item\n                    name=\"home\"\n                    active={activeItem === \"home\"}\n                    onClick={this.handleClick.bind(this)}\n                >\n                    Home\n                </Menu.Item>\n                {isLoggedIn ? (\n                    <Menu.Menu position=\"right\">\n                        <Menu.Item\n                            name=\"logout\"\n                            active={activeItem === \"logout\"}\n                            onClick={this.handleLogout.bind(this)}\n                        >\n                            Logout\n                        </Menu.Item>\n                    </Menu.Menu>\n                ) : (\n                    <Menu.Menu position=\"right\">\n                        <Menu.Item\n                            name=\"login\"\n                            active={activeItem === \"login\"}\n                            onClick={this.handleClick.bind(this)}\n                            as={NavLink}\n                            exact\n                            to=\"/login\"\n                        >\n                            Login\n                        </Menu.Item>\n                        <Menu.Item\n                            name=\"register\"\n                            active={activeItem === \"register\"}\n                            onClick={this.handleClick.bind(this)}\n                            as={NavLink}\n                            exact\n                            to=\"/register\"\n                        >\n                            Register\n                        </Menu.Item>\n                    </Menu.Menu>\n                )}\n            </Menu>\n        );\n    }\n}\n\nexport default withRouter(HeaderMenu);\n","\"use strict\";\n\nimport React, { Component } from \"react\";\nimport fetch from \"isomorphic-unfetch\";\n\nimport { DBFetcher } from \"@shipyardsuite/base-layout\";\n\nimport HeaderMenu from \"../../components/HeaderMenu/HeaderMenu\";\n\nexport default class Home extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    componentDidMount() {\n        fetch(\"/api/Prototype/users\")\n            .then(res => res.json())\n            .then(data => {\n                console.log(data);\n            });\n    }\n\n    render() {\n        return (\n            <div>\n                <HeaderMenu />\n                <DBFetcher url=\"/api/Prototype/test\" />\n            </div>\n        );\n    }\n}\n","\"use strict\";\n\nimport { withRouter, NavLink } from \"react-router-dom\";\nimport React, { Component } from \"react\";\n\nimport { Button, Form, Header, Message, Segment } from \"semantic-ui-react\";\n\nimport { setInStorage } from \"./../../utils/storage\";\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            token: \"\",\n            loginError: \"\",\n            email: \"\",\n            password: \"\"\n        };\n    }\n\n    handleChange(e, { name, value }) {\n        this.setState({ [name]: value });\n    }\n\n    onLogin() {\n        const { email, password } = this.state;\n\n        this.setState(\n            {\n                loginError: \"\"\n            },\n            () => {\n                fetch(\"/api/Prototype/user/login\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                        email: email,\n                        password: password\n                    })\n                })\n                    .then(res => res.json())\n                    .then(json => {\n                        if (json.success) {\n                            setInStorage(\"botany-bay\", { token: json.token });\n\n                            this.props.history.push(\"/dashboard\");\n\n                            this.setState({\n                                loginError: json.message,\n                                email: \"\",\n                                password: \"\",\n                                token: json.token\n                            });\n                        } else {\n                            this.setState({\n                                loginError: json.message\n                            });\n                        }\n                    });\n            }\n        );\n    }\n\n    render() {\n        const { email, password, loginError } = this.state;\n\n        return (\n            <Segment basic>\n                <Header as=\"h2\" color=\"black\" textAlign=\"center\">\n                    Log-in\n                </Header>\n                <Form size=\"large\">\n                    <Segment raised>\n                        <Form.Input\n                            type=\"email\"\n                            name=\"email\"\n                            fluid\n                            icon=\"user\"\n                            iconPosition=\"left\"\n                            value={email}\n                            onChange={this.handleChange.bind(this)}\n                            placeholder=\"E-mail address\"\n                        />\n                        <Form.Input\n                            fluid\n                            icon=\"lock\"\n                            iconPosition=\"left\"\n                            placeholder=\"Password\"\n                            type=\"password\"\n                            name=\"password\"\n                            value={password}\n                            onChange={this.handleChange.bind(this)}\n                        />\n                        <Button\n                            color=\"teal\"\n                            fluid\n                            size=\"large\"\n                            onClick={this.onLogin.bind(this)}\n                        >\n                            Login\n                        </Button>\n                        <Message>\n                            Dont have an account yet?&nbsp;\n                            <NavLink exact to=\"/register\">\n                                Create one now!\n                            </NavLink>\n                        </Message>\n                        {loginError ? (\n                            <Message color=\"red\">{loginError}</Message>\n                        ) : null}\n                    </Segment>\n                </Form>\n            </Segment>\n        );\n    }\n}\n\nexport default withRouter(Login);\n","\"use strict\";\n\nimport React, { Component } from \"react\";\n\nexport default class NotFound extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    render() {\n        return <p>Page not found...</p>;\n    }\n}\n","\"use strict\";\n\nimport { Link, NavLink } from \"react-router-dom\";\nimport React, { Component } from \"react\";\n\nimport { Button, Form, Header, Message, Segment } from \"semantic-ui-react\";\n\nexport default class Register extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            signUpError: \"\",\n            registrationSuccess: false,\n            email: \"\",\n            password: \"\",\n            passwordValidation: \"\"\n        };\n    }\n\n    handleChange(e, { name, value }) {\n        this.setState({ [name]: value });\n    }\n\n    onSignUp() {\n        const { email, password, passwordValidation } = this.state;\n\n        if (password === passwordValidation) {\n            fetch(\"/api/Prototype/user/register\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    email: email,\n                    password: password\n                })\n            })\n                .then(res => res.json())\n                .then(json => {\n                    if (json.success) {\n                        this.setState({\n                            signUpError: json.message,\n                            registrationSuccess: true,\n                            email: \"\",\n                            password: \"\"\n                        });\n                    } else {\n                        this.setState({\n                            signUpError: json.message\n                        });\n                    }\n                });\n        } else {\n            this.setState({\n                signUpError: \"Passwords did not match!\"\n            });\n        }\n    }\n\n    render() {\n        const {\n            email,\n            password,\n            passwordValidation,\n            registrationSuccess,\n            signUpError\n        } = this.state;\n\n        return (\n            <Segment basic>\n                <Header as=\"h2\" color=\"black\" textAlign=\"center\">\n                    Register new Account\n                </Header>\n                <Form size=\"large\">\n                    <Segment raised disabled={registrationSuccess}>\n                        <Form.Input\n                            fluid\n                            type=\"email\"\n                            icon=\"user\"\n                            iconPosition=\"left\"\n                            placeholder=\"E-mail address\"\n                            name=\"email\"\n                            value={email}\n                            onChange={this.handleChange.bind(this)}\n                        />\n                        <Form.Input\n                            fluid\n                            type=\"password\"\n                            icon=\"lock\"\n                            iconPosition=\"left\"\n                            placeholder=\"Password\"\n                            name=\"password\"\n                            value={password}\n                            onChange={this.handleChange.bind(this)}\n                        />\n                        <Form.Input\n                            fluid\n                            type=\"password\"\n                            icon=\"lock\"\n                            iconPosition=\"left\"\n                            placeholder=\"Repeat Password\"\n                            name=\"passwordValidation\"\n                            value={passwordValidation}\n                            onChange={this.handleChange.bind(this)}\n                        />\n                        <Button\n                            color=\"teal\"\n                            fluid\n                            size=\"large\"\n                            onClick={this.onSignUp.bind(this)}\n                        >\n                            Register\n                        </Button>\n                        {registrationSuccess ? (\n                            <Message color=\"green\">\n                                Registration Successful, check your\n                                emails.&nbsp;\n                                <NavLink exact to=\"/\">\n                                    Back to Homepage\n                                </NavLink>\n                            </Message>\n                        ) : null}\n                        {signUpError ? (\n                            <Message color=\"red\">{signUpError}</Message>\n                        ) : null}\n                    </Segment>\n                </Form>\n            </Segment>\n        );\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport App from \"./App\";\n\nimport Home from \"./containers/Home/Home\";\nimport NotFound from \"./containers/NotFound/NotFound\";\nimport Register from \"./containers/Register/Register\";\nimport Login from \"./containers/Login/Login\";\n\nReactDOM.render(\n    <Router>\n        <App>\n            <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <Route exact path=\"/register\" component={Register} />\n                <Route exact path=\"/login\" component={Login} />\n                <Route component={NotFound} />\n            </Switch>\n        </App>\n    </Router>,\n    document.querySelector(\"#root\")\n);\n","\"use strict\";\n\nexport function getFromStorage(key) {\n    if (!key) {\n        return null;\n    }\n\n    try {\n        const valueStr = localStorage.getItem(key);\n\n        if (valueStr) {\n            return JSON.parse(valueStr);\n        }\n\n        return null;\n    } catch (err) {\n        return null;\n    }\n}\n\nexport function setInStorage(key, obj) {\n    if (!key) {\n        console.error(\"Error: Key is missing\");\n    }\n\n    try {\n        localStorage.setItem(key, JSON.stringify(obj));\n    } catch (err) {\n        console.error(err);\n    }\n}\n"]}