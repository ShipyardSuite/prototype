{"version":3,"sources":["app/App.js","app/components/Dashboard/AssetTemplate/AssetTemplate.js","app/components/Dashboard/AssetTemplate/index.js","app/components/Dashboard/DashboardHeader/DashboardHeader.js","app/components/Dashboard/DashboardHeader/index.js","app/components/Dashboard/MassageOfTheDayView/MassageOfTheDayView.js","app/components/Dashboard/MassageOfTheDayView/index.js","app/components/Dashboard/PlayerView/PlayerView.js","app/components/Dashboard/PlayerView/index.js","app/components/Dashboard/ProjectAssetView/ProjectAssetView.js","app/components/Dashboard/ProjectAssetView/index.js","app/components/Dashboard/ProjectInfoView/ProjectInfoView.js","app/components/Dashboard/ProjectInfoView/index.js","app/components/Dashboard/ProjectPlayerView/ProjectPlayerView.js","app/components/Dashboard/ProjectPlayerView/index.js","app/components/Dashboard/index.js","app/containers/Dashboard/Overview/Overview.js","app/containers/Dashboard/Overview/index.js","app/containers/Dashboard/ProjectView/ProjectView.js","app/containers/Dashboard/ProjectView/index.js","app/containers/Dashboard/index.js","app/containers/Page/Home/Home.js","app/containers/Page/Home/index.js","app/containers/Page/Login/Login.js","app/containers/Page/Login/index.js","app/containers/Page/NotFound/NotFound.js","app/containers/Page/NotFound/index.js","app/containers/Page/Register/Register.js","app/containers/Page/Register/index.js","app/containers/Page/index.js","app/initialize.js","app/utils/storage.js"],"names":["App","props","children","Component","AssetTemplate","state","variables","setState","name","type","console","log","options","key","text","value","map","variable","i","addRow","bind","DashboardHeader","isLoggedIn","token","obj","history","push","fetch","then","res","json","success","localStorage","removeItem","handleLogOut","MassageOfTheDayView","activeIndex","isLoading","messages","newMessageTitle","newMessageText","newMessageImage","newMessageDate","Date","getMessages","e","target","date","projectId","method","headers","body","JSON","stringify","title","image","message","data","startTime","Math","round","getTime","endTime","currentTime","handleTabChange","secondary","menuItem","render","length","checkDate","format","handleInputChange","handleDateChange","createNewMessage","PlayerView","isInitializing","player","intervalID","setInterval","getPlayerInfo","clearInterval","playerId","lastUpdateTime","lastUpdate","getIfPlayerOnline","_id","ProjectAssetView","newAssetName","newAssetId","assets","getAssets","identifier","asset","createAsset","ProjectInfoView","project","projectToken","getProjectInfo","getToken","match","params","id","creatorId","createToken","team","teamMember","ProjectPlayerView","players","Overview","user","projects","newProjectName","getUser","getProjects","creator","email","signUpDate","fromNow","lastLogin","NavLink","createProject","ProjectView","Home","Login","loginError","password","onLogin","NotFound","Register","signUpError","registrationSuccess","passwordValidation","onSignUp","ReactDOM","document","querySelector","getFromStorage","setInStorage","valueStr","getItem","parse","err","error","setItem"],"mappings":"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","file":"public/app.js","sourcesContent":["\"use strict\";\n\nimport React, { Component } from \"react\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return this.props.children;\n    }\n}\n\nexport default App;\n","'use strict';\n\nimport { withRouter, NavLink } from 'react-router-dom';\nimport React, { Component } from 'react';\n\nimport { Segment, Input, Form, Button, Label, Select } from 'semantic-ui-react';\n\nclass AssetTemplate extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tvariables: []\n\t\t};\n\t}\n\n\tcomponentDidMount() {}\n\n\taddRow() {\n\t\tthis.setState({\n\t\t\tvariables: [\n\t\t\t\t...this.state.variables,\n\t\t\t\t{\n\t\t\t\t\tname: '',\n\t\t\t\t\ttype: 'String'\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t}\n\n\trender() {\n\t\tconst { variables } = this.state;\n\n\t\tconsole.log(variables);\n\n\t\tconst options = [\n\t\t\t{ key: 'string', text: 'String', value: 'string' },\n\t\t\t{ key: 'bool', text: 'Bool', value: 'bool' },\n\t\t\t{ key: 'float', text: 'Float', value: 'float' },\n\t\t\t{ key: 'int', text: 'Int', value: 'int' }\n\t\t];\n\n\t\treturn (\n\t\t\t<Segment.Group>\n\t\t\t\t<Segment>\n\t\t\t\t\t<Form>\n\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t<Input placeholder=\"Template Name\" />\n\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t</Form>\n\t\t\t\t</Segment>\n\t\t\t\t<Segment>\n\t\t\t\t\t<Form>\n\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t<Input label=\"Number\" labelPosition=\"right\" readOnly value=\"identifier\" />\n\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t<Input label=\"String\" labelPosition=\"right\" readOnly value=\"name\" />\n\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t{variables &&\n\t\t\t\t\t\t\tvariables.map((variable, i) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Form.Field key={i}>\n\t\t\t\t\t\t\t\t\t\t<Input type=\"text\" placeholder=\"Search...\" action>\n\t\t\t\t\t\t\t\t\t\t\t<input />\n\t\t\t\t\t\t\t\t\t\t\t<Select compact options={options} defaultValue=\"string\" />\n\t\t\t\t\t\t\t\t\t\t\t<Button type=\"submit\">✕</Button>\n\t\t\t\t\t\t\t\t\t\t</Input>\n\t\t\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t<Button fluid onClick={this.addRow.bind(this)}>\n\t\t\t\t\t\t\t➕\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<Button primary fluid onClick={this.addRow.bind(this)}>\n\t\t\t\t\t\t\tSave Template\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Form>\n\t\t\t\t</Segment>\n\t\t\t</Segment.Group>\n\t\t);\n\t}\n}\n\nexport default withRouter(AssetTemplate);\n","import AssetTemplate from './AssetTemplate';\n\nexport default { AssetTemplate };\nexport { AssetTemplate };\n","'use strict';\n\nimport { withRouter, NavLink } from 'react-router-dom';\nimport React, { Component } from 'react';\n\nimport { Container, Menu, Segment, Grid, Header } from 'semantic-ui-react';\n\nimport { getFromStorage } from './../../../utils/storage';\n\nclass DashboardHeader extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tisLoggedIn: false,\n\t\t\ttoken: ''\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tconst obj = getFromStorage('botany-bay');\n\n\t\tif (obj && obj.token !== '') {\n\t\t} else {\n\t\t\tthis.setState({ isLoggedIn: false });\n\t\t\treturn this.props.history.push('/login');\n\t\t}\n\n\t\tif (obj && obj.token) {\n\t\t\tconst { token } = obj;\n\n\t\t\t// Verify token\n\t\t\tfetch('/api/Prototype/user/verify?token=' + token).then((res) => res.json()).then((json) => {\n\t\t\t\tif (json.success) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\ttoken,\n\t\t\t\t\t\tisLoggedIn: true\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tisLoggedIn: false\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\thandleLogOut() {\n\t\tconst obj = getFromStorage('botany-bay');\n\n\t\tif (obj && obj.token) {\n\t\t\tconst { token } = obj;\n\n\t\t\t// Verify token\n\t\t\tfetch('/api/Prototype/user/logout?token=' + token).then((res) => res.json()).then((json) => {\n\t\t\t\tif (json.success) {\n\t\t\t\t\tlocalStorage.removeItem('botany-bay');\n\n\t\t\t\t\tthis.setState(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttoken: ''\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\treturn this.props.history.push('/');\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Menu pointing secondary>\n\t\t\t\t<Menu.Item onClick={this.handleLogOut.bind(this)}>Logout</Menu.Item>\n\t\t\t</Menu>\n\t\t);\n\t}\n}\n\nexport default withRouter(DashboardHeader);\n","import DashboardHeader from \"./DashboardHeader\";\n\nexport default { DashboardHeader };\nexport { DashboardHeader };\n","'use strict';\n\nimport { withRouter, NavLink } from 'react-router-dom';\nimport React, { Component } from 'react';\nimport Calendar from 'react-calendar';\nimport moment from 'moment';\n\nimport {\n\tSegment,\n\tGrid,\n\tHeader,\n\tMessage,\n\tImage,\n\tForm,\n\tButton,\n\tInput,\n\tTextArea,\n\tTab,\n\tMenu,\n\tLabel\n} from 'semantic-ui-react';\n\nclass MassageOfTheDayView extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tactiveIndex: 0,\n\t\t\tisLoading: true,\n\t\t\tmessages: [],\n\t\t\tnewMessageTitle: '',\n\t\t\tnewMessageText: '',\n\t\t\tnewMessageImage: '',\n\t\t\tnewMessageDate: new Date()\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.getMessages();\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\thandleDateChange(date) {\n\t\tthis.setState({ newMessageDate: date });\n\t}\n\n\tcreateNewMessage() {\n\t\tconst { newMessageDate, newMessageTitle, newMessageText, newMessageImage } = this.state;\n\t\tconst { projectId } = this.props;\n\n\t\tfetch(`/api/Prototype/project/${projectId}/messageOfTheDay`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tprojectId: projectId,\n\t\t\t\ttitle: newMessageTitle,\n\t\t\t\ttext: newMessageText,\n\t\t\t\timage: newMessageImage,\n\t\t\t\tdate: newMessageDate\n\t\t\t})\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((json) => {\n\t\t\t\tif (json.success) {\n\t\t\t\t\tif (json.success) {\n\t\t\t\t\t\tthis.setState(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tisLoading: false,\n\t\t\t\t\t\t\t\tnewMessageTitle: '',\n\t\t\t\t\t\t\t\tnewMessageText: '',\n\t\t\t\t\t\t\t\tnewMessageImage: '',\n\t\t\t\t\t\t\t\tnewMessageDate: new Date()\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\tthis.getMessages();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(json.message);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tgetMessages() {\n\t\tconst { projectId } = this.props;\n\t\tfetch(`/api/Prototype/project/${projectId}/messageOfTheDay`).then((res) => res.json()).then((json) => {\n\t\t\tif (json.success) {\n\t\t\t\tthis.setState({ isLoading: false, messages: json.data, activeIndex: 0 });\n\t\t\t}\n\t\t});\n\t}\n\n\tcheckDate(message) {\n\t\tconst startTime = Math.round(new Date(message.date[0]).getTime() / 1000);\n\t\tconst endTime = Math.round(new Date(message.date[1]).getTime() / 1000);\n\t\tconst currentTime = Math.round(new Date().getTime() / 1000);\n\n\t\tif ((currentTime > startTime && currentTime < endTime) || startTime <= currentTime) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\thandleTabChange(e, { activeIndex }) {\n\t\tthis.setState({ activeIndex });\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tisLoading,\n\t\t\tmessages,\n\t\t\tnewMessageDate,\n\t\t\tnewMessageTitle,\n\t\t\tnewMessageText,\n\t\t\tnewMessageImage,\n\t\t\tactiveIndex\n\t\t} = this.state;\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Header as=\"h3\">Message Of The Day</Header>\n\t\t\t\t<Tab\n\t\t\t\t\tactiveIndex={activeIndex}\n\t\t\t\t\tonTabChange={this.handleTabChange.bind(this)}\n\t\t\t\t\tmenu={{ secondary: true }}\n\t\t\t\t\tpanes={[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmenuItem: 'Messages',\n\t\t\t\t\t\t\trender: () => (\n\t\t\t\t\t\t\t\t<Tab.Pane loading={isLoading} attached={false} basic>\n\t\t\t\t\t\t\t\t\t{messages.length > 0 ? (\n\t\t\t\t\t\t\t\t\t\t<Grid>\n\t\t\t\t\t\t\t\t\t\t\t{messages.map((message, i) => {\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid.Column mobile={16} tablet={16} computer={8} key={i}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Segment.Group>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Segment\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.checkDate(message) === true ? 'green' : 'red'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{message.image && <Image src={message.image} />}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Header>{message.title}</Header>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p>{message.text}</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Segment>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Segment\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tinverted\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.checkDate(message) === true ? 'green' : 'red'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{message.date[1] ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfrom: {moment(message.date[0]).format('l')} to:{' '}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{moment(message.date[1]).format('l')}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ton: {moment(message.date[0]).format('l')}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Segment>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Segment.Group>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<Message icon=\"info\" info content=\"No Messages yet.\" />\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Tab.Pane>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmenuItem: 'New Message',\n\t\t\t\t\t\t\trender: () => (\n\t\t\t\t\t\t\t\t<Tab.Pane attached={false} basic>\n\t\t\t\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t\t\t\t\t<label>Title</label>\n\t\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Message Title\"\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={newMessageTitle}\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"newMessageTitle\"\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleInputChange.bind(this)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t\t\t\t\t<label>Text</label>\n\t\t\t\t\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Text\"\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={newMessageText}\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"newMessageText\"\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleInputChange.bind(this)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t\t\t\t\t<label>Image URL</label>\n\t\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Image URL\"\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={newMessageImage}\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"newMessageImage\"\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleInputChange.bind(this)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t\t\t\t\t<label>Date</label>\n\t\t\t\t\t\t\t\t\t\t\t<Calendar\n\t\t\t\t\t\t\t\t\t\t\t\tminDate={new Date()}\n\t\t\t\t\t\t\t\t\t\t\t\tselectRange={true}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleDateChange.bind(this)}\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={newMessageDate}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t\t\t\t<Button onClick={this.createNewMessage.bind(this)}>Create Message</Button>\n\t\t\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t\t</Tab.Pane>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t]}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default withRouter(MassageOfTheDayView);\n","import MassageOfTheDayView from './MassageOfTheDayView';\n\nexport default { MassageOfTheDayView };\nexport { MassageOfTheDayView };\n","'use strict';\n\nimport { withRouter, NavLink } from 'react-router-dom';\nimport React, { Component } from 'react';\n\nimport { Segment, Grid, Header, Message, Icon } from 'semantic-ui-react';\n\nclass PlayerView extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tisInitializing: true,\n\t\t\tisLoading: true,\n\t\t\tplayer: []\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.intervalID = setInterval(() => this.getPlayerInfo(), 1000);\n\t}\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.intervalID);\n\t}\n\n\tgetPlayerInfo() {\n\t\tconst { playerId } = this.props;\n\n\t\tif (playerId) {\n\t\t\tfetch(`/api/Prototype/player/${playerId}`).then((res) => res.json()).then((json) => {\n\t\t\t\tif (json.success) {\n\t\t\t\t\tthis.setState({ isInitializing: false, isLoading: false, player: json.data });\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tgetIfPlayerOnline() {\n\t\tconst { player } = this.state;\n\t\tconst lastUpdateTime = Math.round(new Date(player.lastUpdate).getTime() / 1000);\n\t\tconst currentTime = Math.round(new Date().getTime() / 1000);\n\n\t\tif (currentTime - lastUpdateTime < 5) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { playerId } = this.props;\n\t\tconst { isInitializing, isLoading, player } = this.state;\n\n\t\treturn (\n\t\t\t<Segment loading={isLoading} color={this.getIfPlayerOnline() ? 'green' : 'red'}>\n\t\t\t\t<Header as=\"h3\" icon=\"user\" content={player.name} subheader={player._id} />\n\t\t\t</Segment>\n\t\t);\n\t}\n}\n\nexport default withRouter(PlayerView);\n","import PlayerView from './PlayerView';\n\nexport default { PlayerView };\nexport { PlayerView };\n","'use strict';\n\nimport { withRouter, NavLink } from 'react-router-dom';\nimport React, { Component } from 'react';\n\nimport {\n\tSegment,\n\tGrid,\n\tHeader,\n\tMessage,\n\tImage,\n\tForm,\n\tButton,\n\tInput,\n\tTextArea,\n\tTab,\n\tMenu,\n\tLabel\n} from 'semantic-ui-react';\n\nimport AssetTemplate from '../AssetTemplate/AssetTemplate';\n\nclass ProjectAssetView extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tactiveIndex: 0,\n\t\t\tnewAssetName: '',\n\t\t\tnewAssetId: '',\n\t\t\tisLoading: true,\n\t\t\tassets: {}\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.getAssets();\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\thandleTabChange(e, { activeIndex }) {\n\t\tthis.setState({ activeIndex });\n\t}\n\n\tcreateAsset() {\n\t\tconst { projectId } = this.props;\n\t\tconst { newAssetName, newAssetId } = this.state;\n\n\t\tfetch(`/api/Prototype/project/${projectId}/asset`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tprojectId: projectId,\n\t\t\t\tname: newAssetName,\n\t\t\t\tidentifier: newAssetId\n\t\t\t})\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((json) => {\n\t\t\t\tif (json.success) {\n\t\t\t\t\tif (json.success) {\n\t\t\t\t\t\tthis.setState(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tnewAssetName: '',\n\t\t\t\t\t\t\t\tnewAssetId: ''\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\tthis.getAssets();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(json.message);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tgetAssets() {\n\t\tconst { projectId } = this.props;\n\t\tfetch(`/api/Prototype/project/${projectId}/assets`).then((res) => res.json()).then((json) => {\n\t\t\tif (json.success) {\n\t\t\t\tthis.setState({ isLoading: false, assets: json.data, activeIndex: 0 });\n\t\t\t}\n\t\t});\n\t}\n\n\trender() {\n\t\tconst { assets, isLoading, activeIndex, newAssetName, newAssetId } = this.state;\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Header as=\"h3\">Assets</Header>\n\t\t\t\t<Tab\n\t\t\t\t\tmenu={{ secondary: true }}\n\t\t\t\t\tactiveIndex={activeIndex}\n\t\t\t\t\tonTabChange={this.handleTabChange.bind(this)}\n\t\t\t\t\tpanes={[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmenuItem: 'Assets',\n\t\t\t\t\t\t\trender: () => (\n\t\t\t\t\t\t\t\t<Tab.Pane loading={isLoading} attached={false} basic>\n\t\t\t\t\t\t\t\t\t{assets.length > 0 ? (\n\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t{assets.map((asset, i) => {\n\t\t\t\t\t\t\t\t\t\t\t\treturn <div key={i}>{asset.identifier}</div>;\n\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<Message icon=\"info\" info content=\"No Assets yet.\" />\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Tab.Pane>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmenuItem: 'Create Asset',\n\t\t\t\t\t\t\trender: () => (\n\t\t\t\t\t\t\t\t<Tab.Pane attached={false} basic>\n\t\t\t\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t\t\t\t\t<label>Name</label>\n\t\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Asset Name\"\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={newAssetName}\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"newAssetName\"\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleInputChange.bind(this)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Asset Identifier\"\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={newAssetId}\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"newAssetId\"\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleInputChange.bind(this)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t\t\t\t<Button onClick={this.createAsset.bind(this)}>Create Asset</Button>\n\t\t\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t\t</Tab.Pane>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmenuItem: 'Asset Templates',\n\t\t\t\t\t\t\trender: () => (\n\t\t\t\t\t\t\t\t<Tab.Pane attached={false} basic>\n\t\t\t\t\t\t\t\t\t<h3>Create Template</h3>\n\t\t\t\t\t\t\t\t\t<AssetTemplate />\n\t\t\t\t\t\t\t\t</Tab.Pane>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t]}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default withRouter(ProjectAssetView);\n","import ProjectAssetView from './ProjectAssetView';\n\nexport default { ProjectAssetView };\nexport { ProjectAssetView };\n","'use strict';\n\nimport { withRouter, NavLink } from 'react-router-dom';\nimport React, { Component } from 'react';\n\nimport { Segment, Grid, Header, List, Button } from 'semantic-ui-react';\n\nclass ProjectInfoView extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tisLoading: true,\n\t\t\tproject: [],\n\t\t\tprojectToken: ''\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.intervalID = setInterval(() => this.getProjectInfo(), 1000);\n\t}\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.intervalID);\n\t}\n\n\tgetProjectInfo() {\n\t\tconst { projectId } = this.props;\n\n\t\tfetch(`/api/Prototype/project/${projectId}`).then((res) => res.json()).then((json) => {\n\t\t\tif (json.success) {\n\t\t\t\tthis.setState({ project: json.project, isLoading: false }, () => {\n\t\t\t\t\tthis.getToken();\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tcreateToken(projectId) {\n\t\tfetch(`/api/Prototype/project/token`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tprojectId: projectId\n\t\t\t})\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((json) => {\n\t\t\t\tif (json.success) {\n\t\t\t\t\tthis.setState({ projectToken: json.data.token });\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tupdateToken(projectId) {\n\t\tfetch(`/api/Prototype/project/token`, {\n\t\t\tmethod: 'PUT',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tprojectId: projectId\n\t\t\t})\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((json) => {\n\t\t\t\tif (json.success) {\n\t\t\t\t\tthis.getToken();\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tgetToken() {\n\t\tfetch(`/api/Prototype/project/${this.props.match.params.id}/token`).then((res) => res.json()).then((data) => {\n\t\t\tif (data.success) {\n\t\t\t\tthis.setState({ projectToken: data.data[0].token });\n\t\t\t}\n\t\t});\n\t}\n\n\trender() {\n\t\tconst { isLoading, project, projectToken } = this.state;\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Header as=\"h3\">Project Overview</Header>\n\t\t\t\t<Segment basic loading={isLoading}>\n\t\t\t\t\t{isLoading === false && (\n\t\t\t\t\t\t<List>\n\t\t\t\t\t\t\t<List.Item icon=\"user\" header=\"Creator\" content={project.creatorId} />\n\t\t\t\t\t\t\t{projectToken ? (\n\t\t\t\t\t\t\t\t<List.Item icon=\"lock\" header=\"Token\" content={projectToken} />\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<List.Item\n\t\t\t\t\t\t\t\t\ticon=\"lock\"\n\t\t\t\t\t\t\t\t\theader=\"Token\"\n\t\t\t\t\t\t\t\t\tcontent={\n\t\t\t\t\t\t\t\t\t\t<Button onClick={this.createToken.bind(this, project._id)}>Create Token</Button>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<List.Item>\n\t\t\t\t\t\t\t\t<List.Icon name=\"users\" />\n\t\t\t\t\t\t\t\t<List.Content>\n\t\t\t\t\t\t\t\t\t<List.Header>Team</List.Header>\n\n\t\t\t\t\t\t\t\t\t<List.List>\n\t\t\t\t\t\t\t\t\t\t{project.team &&\n\t\t\t\t\t\t\t\t\t\t\tproject.team.map((teamMember, i) => {\n\t\t\t\t\t\t\t\t\t\t\t\treturn <List.Item key={i}>{teamMember}</List.Item>;\n\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t</List.List>\n\t\t\t\t\t\t\t\t</List.Content>\n\t\t\t\t\t\t\t</List.Item>\n\t\t\t\t\t\t</List>\n\t\t\t\t\t)}\n\t\t\t\t</Segment>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default withRouter(ProjectInfoView);\n","import ProjectInfoView from './ProjectInfoView';\n\nexport default { ProjectInfoView };\nexport { ProjectInfoView };\n","'use strict';\n\nimport { withRouter, NavLink } from 'react-router-dom';\nimport React, { Component } from 'react';\n\nimport { Segment, Grid, Header, Message } from 'semantic-ui-react';\n\nimport { PlayerView } from './../index';\n\nclass ProjectPlayerView extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tisLoading: true,\n\t\t\tplayers: []\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.intervalID = setInterval(() => this.getProjectInfo(), 1000);\n\t}\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.intervalID);\n\t}\n\n\tgetProjectInfo() {\n\t\tconst { projectId } = this.props;\n\n\t\tfetch(`/api/Prototype/project/${projectId}`).then((res) => res.json()).then((json) => {\n\t\t\tif (json.success) {\n\t\t\t\tthis.setState({ players: json.project.players, isLoading: false }, () => {});\n\t\t\t}\n\t\t});\n\t}\n\n\trender() {\n\t\tconst { isLoading, players } = this.state;\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Header as=\"h3\">Players {players && players.length > 0 ? `(${players.length})` : ''}</Header>\n\t\t\t\t<Segment basic loading={isLoading}>\n\t\t\t\t\t{isLoading === false && (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{players.length > 0 ? (\n\t\t\t\t\t\t\t\t<Grid>\n\t\t\t\t\t\t\t\t\t{players.map((player, i) => {\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<Grid.Column mobile={16} tablet={16} computer={4} key={i}>\n\t\t\t\t\t\t\t\t\t\t\t\t<PlayerView playerId={player} />\n\t\t\t\t\t\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<Message icon=\"info\" info content=\"No Players yet.\" />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</Segment>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default withRouter(ProjectPlayerView);\n","import ProjectPlayerView from './ProjectPlayerView';\n\nexport default { ProjectPlayerView };\nexport { ProjectPlayerView };\n","import { DashboardHeader } from './DashboardHeader';\nimport { PlayerView } from './PlayerView';\nimport { ProjectInfoView } from './ProjectInfoView';\nimport { ProjectPlayerView } from './ProjectPlayerView';\nimport { MassageOfTheDayView } from './MassageOfTheDayView';\nimport { ProjectAssetView } from './ProjectAssetView';\nimport { AssetTemplate } from './AssetTemplate';\n\nexport default {\n\tDashboardHeader,\n\tPlayerView,\n\tProjectInfoView,\n\tProjectPlayerView,\n\tMassageOfTheDayView,\n\tProjectAssetView,\n\tAssetTemplate\n};\nexport {\n\tDashboardHeader,\n\tPlayerView,\n\tProjectInfoView,\n\tProjectPlayerView,\n\tMassageOfTheDayView,\n\tProjectAssetView,\n\tAssetTemplate\n};\n","'use strict';\n\nimport { withRouter, NavLink } from 'react-router-dom';\nimport React, { Component } from 'react';\nimport moment from 'moment';\n\nimport { Container, Menu, Message, Segment, List, Grid, Input, Header, Button } from 'semantic-ui-react';\n\nimport { getFromStorage } from './../../../utils/storage';\n\nimport { DashboardHeader } from './../../../components/Dashboard';\n\nclass Overview extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tisLoading: true,\n\t\t\tuser: {},\n\t\t\tprojects: [],\n\t\t\tnewProjectName: ''\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.getUser();\n\t}\n\n\tgetUser() {\n\t\tconst obj = getFromStorage('botany-bay');\n\n\t\tif (obj && obj.token) {\n\t\t\tconst { token } = obj;\n\n\t\t\tfetch('/api/Prototype/user/?id=' + token).then((res) => res.json()).then((json) => {\n\t\t\t\tif (json.success) {\n\t\t\t\t\tthis.setState(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tisLoading: false,\n\t\t\t\t\t\t\tuser: json.data.user\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\tthis.getProjects();\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tisLoading: false\n\t\t\t});\n\t\t}\n\t}\n\n\tgetProjects() {\n\t\tconst { user } = this.state;\n\t\tfetch(`/api/Prototype/${user._id}/projects/`).then((res) => res.json()).then((data) => {\n\t\t\tif (data.success) {\n\t\t\t\tthis.setState({ projects: data.projects });\n\t\t\t}\n\t\t});\n\t}\n\n\tcreateProject() {\n\t\tconst { user, newProjectName } = this.state;\n\t\tfetch(`/api/Prototype/project/create`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tcreator: user._id,\n\t\t\t\ttitle: newProjectName\n\t\t\t})\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((json) => {\n\t\t\t\tif (json.success) {\n\t\t\t\t\tthis.getProjects();\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\trender() {\n\t\tconst { isLoading, user, projects, newProjectName } = this.state;\n\n\t\treturn (\n\t\t\t<Container className=\"content\">\n\t\t\t\t<DashboardHeader />\n\t\t\t\t<Segment basic loading={isLoading}>\n\t\t\t\t\t<Header as=\"h2\">\n\t\t\t\t\t\t{user.email}\n\t\t\t\t\t\t<Header.Subheader>({user._id})</Header.Subheader>\n\t\t\t\t\t</Header>\n\n\t\t\t\t\t<Header as=\"h3\">User Informations</Header>\n\t\t\t\t\t<List>\n\t\t\t\t\t\t<List.Item icon=\"hashtag\" header=\"ID\" content={user._id} />\n\t\t\t\t\t\t<List.Item\n\t\t\t\t\t\t\ticon=\"calendar check outline\"\n\t\t\t\t\t\t\theader=\"Signed Up\"\n\t\t\t\t\t\t\tcontent={`${moment(user.signUpDate).fromNow(true)} ago`}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<List.Item\n\t\t\t\t\t\t\ticon=\"calendar alternate outline\"\n\t\t\t\t\t\t\theader=\"Last Login\"\n\t\t\t\t\t\t\tcontent={`${moment(user.lastLogin).fromNow(true)} ago`}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<List.Item icon=\"mail\" header=\"E-Mail\" content={user.email} />\n\t\t\t\t\t</List>\n\n\t\t\t\t\t<h3>Projects</h3>\n\n\t\t\t\t\t{projects.length > 0 ? (\n\t\t\t\t\t\t<Grid>\n\t\t\t\t\t\t\t{projects.map((project, i) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Grid.Column mobile={16} tablet={16} computer={8} key={i}>\n\t\t\t\t\t\t\t\t\t\t<Segment>\n\t\t\t\t\t\t\t\t\t\t\t<Header as={NavLink} to={`/dashboard/project/${project._id}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t{project.title}\n\t\t\t\t\t\t\t\t\t\t\t\t<Header.Subheader>({project._id})</Header.Subheader>\n\t\t\t\t\t\t\t\t\t\t\t</Header>\n\t\t\t\t\t\t\t\t\t\t</Segment>\n\t\t\t\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Message icon=\"info\" info content=\"No Messages yet.\" />\n\t\t\t\t\t)}\n\n\t\t\t\t\t<h3>Create New Project</h3>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tname=\"newProjectName\"\n\t\t\t\t\t\t\tvalue={newProjectName}\n\t\t\t\t\t\t\tonChange={this.handleInputChange.bind(this)}\n\t\t\t\t\t\t\tplaceholder=\"Project name...\"\n\t\t\t\t\t\t\taction\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<input />\n\t\t\t\t\t\t\t<Button onClick={this.createProject.bind(this)}>Create Project</Button>\n\t\t\t\t\t\t</Input>\n\t\t\t\t\t</div>\n\t\t\t\t</Segment>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nexport default withRouter(Overview);\n","import Overview from \"./Overview\";\n\nexport default { Overview };\nexport { Overview };\n","'use strict';\n\nimport { withRouter, NavLink } from 'react-router-dom';\nimport React, { Component } from 'react';\n\nimport { Container, Menu, Segment, Grid, Header, Tab } from 'semantic-ui-react';\n\nimport {\n\tProjectInfoView,\n\tProjectPlayerView,\n\tMassageOfTheDayView,\n\tProjectAssetView\n} from './../../../components/Dashboard';\n\nclass ProjectView extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tisLoading: true,\n\t\t\tactiveIndex: 0,\n\t\t\tproject: [],\n\t\t\tprojectToken: ''\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.getProjectInfo();\n\t}\n\n\tgetProjectInfo() {\n\t\tfetch(`/api/Prototype/project/${this.props.match.params.id}`).then((res) => res.json()).then((json) => {\n\t\t\tif (json.success) {\n\t\t\t\tthis.setState({ project: json.project, isLoading: false }, () => {});\n\t\t\t}\n\t\t});\n\t}\n\n\thandleTabChange(e, { activeIndex }) {\n\t\tthis.setState({ activeIndex });\n\t}\n\n\trender() {\n\t\tconst { isLoading, project, activeIndex } = this.state;\n\n\t\treturn (\n\t\t\t<Container className=\"content\">\n\t\t\t\t<Menu pointing secondary>\n\t\t\t\t\t<Menu.Item as={NavLink} exact to=\"/dashboard\">\n\t\t\t\t\t\tDashboard\n\t\t\t\t\t</Menu.Item>\n\t\t\t\t</Menu>\n\t\t\t\t<Segment basic loading={isLoading}>\n\t\t\t\t\t<Header as=\"h2\">\n\t\t\t\t\t\t{project.title}\n\t\t\t\t\t\t<Header.Subheader>({project._id})</Header.Subheader>\n\t\t\t\t\t</Header>\n\t\t\t\t\t{isLoading === false && (\n\t\t\t\t\t\t<Tab\n\t\t\t\t\t\t\tonTabChange={this.handleTabChange.bind(this)}\n\t\t\t\t\t\t\tactiveIndex={activeIndex}\n\t\t\t\t\t\t\tmenu={{ secondary: true }}\n\t\t\t\t\t\t\tpanes={[\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tmenuItem: 'Overview',\n\t\t\t\t\t\t\t\t\trender: () => (\n\t\t\t\t\t\t\t\t\t\t<Tab.Pane attached={false} basic>\n\t\t\t\t\t\t\t\t\t\t\t<ProjectInfoView projectId={project._id} />\n\t\t\t\t\t\t\t\t\t\t</Tab.Pane>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tmenuItem: 'Players',\n\t\t\t\t\t\t\t\t\trender: () => (\n\t\t\t\t\t\t\t\t\t\t<Tab.Pane attached={false} basic>\n\t\t\t\t\t\t\t\t\t\t\t<ProjectPlayerView projectId={project._id} />\n\t\t\t\t\t\t\t\t\t\t</Tab.Pane>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tmenuItem: 'Message Of The Day',\n\t\t\t\t\t\t\t\t\trender: () => (\n\t\t\t\t\t\t\t\t\t\t<Tab.Pane attached={false} basic>\n\t\t\t\t\t\t\t\t\t\t\t<MassageOfTheDayView projectId={project._id} />\n\t\t\t\t\t\t\t\t\t\t</Tab.Pane>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tmenuItem: 'Assets',\n\t\t\t\t\t\t\t\t\trender: () => (\n\t\t\t\t\t\t\t\t\t\t<Tab.Pane attached={false} basic>\n\t\t\t\t\t\t\t\t\t\t\t<ProjectAssetView projectId={project._id} />\n\t\t\t\t\t\t\t\t\t\t</Tab.Pane>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tmenuItem: 'Settings',\n\t\t\t\t\t\t\t\t\trender: () => (\n\t\t\t\t\t\t\t\t\t\t<Tab.Pane attached={false} basic>\n\t\t\t\t\t\t\t\t\t\t\t<p>Settings...</p>\n\t\t\t\t\t\t\t\t\t\t</Tab.Pane>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</Segment>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nexport default withRouter(ProjectView);\n","import ProjectView from \"./ProjectView\";\n\nexport default { ProjectView };\nexport { ProjectView };\n","import { Overview } from './Overview';\nimport { ProjectView } from './ProjectView';\n\nexport default { Overview, ProjectView };\nexport { Overview, ProjectView };\n","\"use strict\";\n\nimport { withRouter, NavLink } from \"react-router-dom\";\nimport React, { Component } from \"react\";\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    componentDidMount() {}\n\n    render() {\n        return (\n            <div>\n                <ul>\n                    <li>\n                        <NavLink exact to=\"/login\">\n                            Login\n                        </NavLink>\n                    </li>\n                    <li>\n                        <NavLink exact to=\"/register\">\n                            Register\n                        </NavLink>\n                    </li>\n                </ul>\n                <hr />\n                <div>\n                    <h1>Homepage</h1>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(Home);\n","import Home from \"./Home\";\n\nexport default { Home };\nexport { Home };\n","\"use strict\";\n\nimport { withRouter, NavLink } from \"react-router-dom\";\nimport React, { Component } from \"react\";\n\nimport { setInStorage } from \"./../../../utils/storage\";\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            token: \"\",\n            loginError: \"\",\n            email: \"\",\n            password: \"\"\n        };\n    }\n\n    handleInputChange(e) {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    }\n\n    onLogin() {\n        const { email, password } = this.state;\n\n        this.setState(\n            {\n                loginError: \"\"\n            },\n            () => {\n                fetch(\"/api/Prototype/user/login\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                        email: email,\n                        password: password\n                    })\n                })\n                    .then(res => res.json())\n                    .then(json => {\n                        if (json.success) {\n                            setInStorage(\"botany-bay\", { token: json.token });\n\n                            this.props.history.push(\"/dashboard\");\n\n                            this.setState({\n                                loginError: json.message,\n                                email: \"\",\n                                password: \"\",\n                                token: json.token\n                            });\n                        } else {\n                            this.setState({\n                                loginError: json.message\n                            });\n                        }\n                    });\n            }\n        );\n    }\n\n    render() {\n        const { email, password, loginError } = this.state;\n\n        return (\n            <div>\n                <ul>\n                    <li>\n                        <NavLink exact to=\"/\">\n                            Home\n                        </NavLink>\n                    </li>\n                </ul>\n                <hr />\n                <div>\n                    <h1>Log-In</h1>\n\n                    <div>\n                        <input\n                            type=\"email\"\n                            name=\"email\"\n                            value={email}\n                            onChange={this.handleInputChange.bind(this)}\n                            placeholder=\"E-mail address\"\n                        />\n                        <br />\n                        <input\n                            placeholder=\"Password\"\n                            type=\"password\"\n                            name=\"password\"\n                            value={password}\n                            onChange={this.handleInputChange.bind(this)}\n                        />\n                        <br />\n                        <button onClick={this.onLogin.bind(this)}>Login</button>\n                    </div>\n\n                    {loginError ? <p>{loginError}</p> : null}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(Login);\n","import Login from \"./Login\";\n\nexport default { Login };\nexport { Login };\n","\"use strict\";\n\nimport { withRouter, NavLink } from \"react-router-dom\";\nimport React, { Component } from \"react\";\n\nclass NotFound extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    componentDidMount() {\n        fetch(\"/api/Prototype/users\")\n            .then(res => res.json())\n            .then(data => {\n                console.log(data);\n            });\n    }\n\n    render() {\n        return (\n            <div>\n                <div>\n                    <h1>404</h1>\n                    <p>Page not found...</p>\n\n                    <NavLink exact to=\"/\">\n                        Home\n                    </NavLink>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(NotFound);\n","import NotFound from \"./NotFound\";\n\nexport default { NotFound };\nexport { NotFound };\n","\"use strict\";\n\nimport { withRouter, NavLink } from \"react-router-dom\";\nimport React, { Component } from \"react\";\n\nclass Register extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            signUpError: \"\",\n            registrationSuccess: false,\n            email: \"\",\n            password: \"\",\n            passwordValidation: \"\"\n        };\n    }\n\n    handleInputChange(e) {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    }\n\n    onSignUp() {\n        const { email, password, passwordValidation } = this.state;\n\n        if (password === passwordValidation) {\n            fetch(\"/api/Prototype/user/register\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    email: email,\n                    password: password\n                })\n            })\n                .then(res => res.json())\n                .then(json => {\n                    if (json.success) {\n                        this.setState({\n                            signUpError: json.message,\n                            registrationSuccess: true,\n                            email: \"\",\n                            password: \"\"\n                        });\n                    } else {\n                        this.setState({\n                            signUpError: json.message\n                        });\n                    }\n                });\n        } else {\n            this.setState({\n                signUpError: \"Passwords did not match!\"\n            });\n        }\n    }\n\n    render() {\n        const {\n            email,\n            password,\n            passwordValidation,\n            registrationSuccess,\n            signUpError\n        } = this.state;\n\n        return (\n            <div>\n                <ul>\n                    <li>\n                        <NavLink exact to=\"/\">\n                            Home\n                        </NavLink>\n                    </li>\n                </ul>\n                <hr />\n                <div>\n                    <h1>Register</h1>\n\n                    <div>\n                        <input\n                            type=\"email\"\n                            name=\"email\"\n                            value={email}\n                            onChange={this.handleInputChange.bind(this)}\n                            placeholder=\"E-mail address\"\n                        />\n                        <br />\n                        <input\n                            placeholder=\"Password\"\n                            type=\"password\"\n                            name=\"password\"\n                            value={password}\n                            onChange={this.handleInputChange.bind(this)}\n                        />\n                        <br />\n                        <input\n                            placeholder=\"Repeat Password\"\n                            type=\"password\"\n                            name=\"passwordValidation\"\n                            value={passwordValidation}\n                            onChange={this.handleInputChange.bind(this)}\n                        />\n                        <br />\n                        <button onClick={this.onSignUp.bind(this)}>\n                            Register\n                        </button>\n                    </div>\n\n                    {registrationSuccess ? (\n                        <p>\n                            Registration Successful, check your emails.&nbsp;\n                            <NavLink exact to=\"/\">\n                                Back to Homepage\n                            </NavLink>\n                        </p>\n                    ) : null}\n                    {signUpError ? <p>{signUpError}</p> : null}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(Register);\n\n/*\n<Form.Input\n                                fluid\n                                type=\"email\"\n                                icon=\"user\"\n                                iconPosition=\"left\"\n                                placeholder=\"E-mail address\"\n                                name=\"email\"\n                                value={email}\n                                onChange={this.handleChange.bind(this)}\n                            />\n                            <Form.Input\n                                fluid\n                                type=\"password\"\n                                icon=\"lock\"\n                                iconPosition=\"left\"\n                                placeholder=\"Password\"\n                                name=\"password\"\n                                value={password}\n                                onChange={this.handleChange.bind(this)}\n                            />\n                            <Form.Input\n                                fluid\n                                type=\"password\"\n                                icon=\"lock\"\n                                iconPosition=\"left\"\n                                placeholder=\"Repeat Password\"\n                                name=\"passwordValidation\"\n                                value={passwordValidation}\n                                onChange={this.handleChange.bind(this)}\n                            />\n                            <Button\n                                color=\"teal\"\n                                fluid\n                                size=\"large\"\n                                onClick={this.onSignUp.bind(this)}\n                            >\n                                Register\n                            </Button>\n*/\n","import Register from \"./Register\";\n\nexport default { Register };\nexport { Register };\n","import { Home } from \"./Home\";\nimport { NotFound } from \"./NotFound\";\nimport { Login } from \"./Login\";\nimport { Register } from \"./Register\";\n\nexport default { Home, NotFound, Login, Register };\nexport { Home, NotFound, Login, Register };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport App from './App';\n\nimport { Home, NotFound, Login, Register } from './containers/Page';\nimport { Overview, ProjectView } from './containers/Dashboard';\n\nReactDOM.render(\n\t<Router>\n\t\t<App>\n\t\t\t<Switch>\n\t\t\t\t<Route exact path=\"/\" component={Home} />\n\t\t\t\t<Route exact path=\"/login\" component={Login} />\n\t\t\t\t<Route exact path=\"/register\" component={Register} />\n\t\t\t\t<Route exact path=\"/dashboard\" component={Overview} />\n\t\t\t\t<Route exact path=\"/dashboard/project/:id\" component={ProjectView} />\n\t\t\t\t<Route component={NotFound} />\n\t\t\t</Switch>\n\t\t</App>\n\t</Router>,\n\tdocument.querySelector('#root')\n);\n","\"use strict\";\n\nexport function getFromStorage(key) {\n    if (!key) {\n        return null;\n    }\n\n    try {\n        const valueStr = localStorage.getItem(key);\n\n        if (valueStr) {\n            return JSON.parse(valueStr);\n        }\n\n        return null;\n    } catch (err) {\n        return null;\n    }\n}\n\nexport function setInStorage(key, obj) {\n    if (!key) {\n        console.error(\"Error: Key is missing\");\n    }\n\n    try {\n        localStorage.setItem(key, JSON.stringify(obj));\n    } catch (err) {\n        console.error(err);\n    }\n}\n"]}