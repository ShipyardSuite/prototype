{"version":3,"sources":["app/App.js","app/components/Dashboard/DashboardHeader/DashboardHeader.js","app/components/Dashboard/DashboardHeader/index.js","app/components/Dashboard/ProjectTeamView/ProjectTeamView.js","app/components/Dashboard/UserById/UserById.js","app/components/Dashboard/UserById/index.js","app/components/Dashboard/index.js","app/containers/Dashboard/Overview/Overview.js","app/containers/Dashboard/Overview/index.js","app/containers/Dashboard/ProjectView/ProjectView.js","app/containers/Dashboard/ProjectView/index.js","app/containers/Dashboard/index.js","app/containers/Page/Home/Home.js","app/containers/Page/Home/index.js","app/containers/Page/Login/Login.js","app/containers/Page/Login/index.js","app/containers/Page/NotFound/NotFound.js","app/containers/Page/NotFound/index.js","app/containers/Page/Register/Register.js","app/containers/Page/Register/index.js","app/containers/Page/index.js","app/initialize.js","app/utils/storage.js"],"names":["App","props","children","Component","DashboardHeader","state","isLoggedIn","token","obj","setState","history","push","fetch","then","res","json","success","localStorage","removeItem","handleLogOut","bind","ProjectTeamView","project","UserById","user","userId","data","console","log","idFound","email","Overview","projects","getUser","isLoading","getProjects","_id","signUpDate","fromNow","lastLogin","isVerified","map","i","title","ProjectView","projectToken","match","params","id","getToken","projectId","method","headers","body","JSON","stringify","creatorId","updateToken","createToken","team","teamMember","Home","Login","loginError","password","e","target","name","value","message","handleInputChange","onLogin","NotFound","Register","signUpError","registrationSuccess","passwordValidation","onSignUp","ReactDOM","render","document","querySelector","getFromStorage","setInStorage","key","valueStr","getItem","parse","err","error","setItem"],"mappings":"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","file":"public/app.js","sourcesContent":["\"use strict\";\n\nimport React, { Component } from \"react\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return this.props.children;\n    }\n}\n\nexport default App;\n","\"use strict\";\n\nimport { withRouter, NavLink } from \"react-router-dom\";\nimport React, { Component } from \"react\";\n\nimport { getFromStorage } from \"./../../../utils/storage\";\n\nclass DashboardHeader extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isLoggedIn: false,\n            token: \"\"\n        };\n    }\n\n    componentDidMount() {\n        const obj = getFromStorage(\"botany-bay\");\n\n        if (obj && obj.token !== \"\") {\n        } else {\n            this.setState({ isLoggedIn: false });\n            return this.props.history.push(\"/login\");\n        }\n\n        if (obj && obj.token) {\n            const { token } = obj;\n\n            // Verify token\n            fetch(\"/api/Prototype/user/verify?token=\" + token)\n                .then(res => res.json())\n                .then(json => {\n                    if (json.success) {\n                        this.setState({\n                            token,\n                            isLoggedIn: true\n                        });\n                    } else {\n                        this.setState({\n                            isLoggedIn: false\n                        });\n                    }\n                });\n        }\n    }\n\n    handleLogOut() {\n        const obj = getFromStorage(\"botany-bay\");\n\n        if (obj && obj.token) {\n            const { token } = obj;\n\n            // Verify token\n            fetch(\"/api/Prototype/user/logout?token=\" + token)\n                .then(res => res.json())\n                .then(json => {\n                    if (json.success) {\n                        localStorage.removeItem(\"botany-bay\");\n\n                        this.setState(\n                            {\n                                token: \"\"\n                            },\n                            () => {\n                                return this.props.history.push(\"/\");\n                            }\n                        );\n                    }\n                });\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <ul>\n                    <li>\n                        <a href=\"#\" onClick={this.handleLogOut.bind(this)}>\n                            Logout\n                        </a>\n                    </li>\n                </ul>\n                <hr />\n            </div>\n        );\n    }\n}\n\nexport default withRouter(DashboardHeader);\n","import DashboardHeader from \"./DashboardHeader\";\n\nexport default { DashboardHeader };\nexport { DashboardHeader };\n","\"use strict\";\n\nimport { withRouter, NavLink } from \"react-router-dom\";\nimport React, { Component } from \"react\";\n\nclass ProjectTeamView extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            project: []\n        };\n    }\n\n    componentDidMount() {\n        // fetch(`/api/Prototype/project/${this.props.match.params.id}`)\n        //     .then(res => res.json())\n        //     .then(data => {\n        //         if (data.success) {\n        //             this.setState({ project: data.project });\n        //         }\n        //     });\n    }\n\n    render() {\n        return <div>Test</div>;\n    }\n}\n\nexport default withRouter(ProjectTeamView);\n","\"use strict\";\n\nimport { withRouter, NavLink } from \"react-router-dom\";\nimport React, { Component } from \"react\";\n\nclass UserById extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: []\n        };\n    }\n\n    componentDidMount() {\n        const { userId } = this.props;\n\n        if (userId) {\n            fetch(`/api/Prototype/user/${userId}`)\n                .then(res => res.json())\n                .then(data => {\n                    if (data.success) {\n                        console.log(data);\n                        this.setState({ user: data, idFound: true });\n                    }\n                });\n        }\n    }\n\n    render() {\n        const { userId } = this.props;\n        const { user } = this.state;\n\n        return (\n            <NavLink exact to={`/profile/${userId}`}>\n                {user.email}\n            </NavLink>\n        );\n    }\n}\n\nexport default withRouter(UserById);\n","import UserById from \"./UserById\";\n\nexport default { UserById };\nexport { UserById };\n","import { DashboardHeader } from \"./DashboardHeader\";\nimport { UserById } from \"./UserById\";\n\nexport default {\n    DashboardHeader,\n    UserById\n};\nexport { DashboardHeader, UserById };\n","\"use strict\";\n\nimport { withRouter, NavLink } from \"react-router-dom\";\nimport React, { Component } from \"react\";\nimport moment from \"moment\";\n\nimport { getFromStorage } from \"./../../../utils/storage\";\n\nimport { DashboardHeader } from \"./../../../components/Dashboard\";\n\nclass Overview extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: {},\n            projects: []\n        };\n    }\n\n    componentDidMount() {\n        this.getUser();\n    }\n\n    getUser() {\n        const obj = getFromStorage(\"botany-bay\");\n\n        if (obj && obj.token) {\n            const { token } = obj;\n\n            fetch(\"/api/Prototype/user/?id=\" + token)\n                .then(res => res.json())\n                .then(json => {\n                    if (json.success) {\n                        this.setState(\n                            {\n                                isLoading: false,\n                                user: json.data.user\n                            },\n                            () => {\n                                this.getProjects();\n                            }\n                        );\n                    }\n                });\n        } else {\n            this.setState({\n                isLoading: false\n            });\n        }\n    }\n\n    getProjects() {\n        const { user } = this.state;\n        fetch(`/api/Prototype/${user._id}/projects/`)\n            .then(res => res.json())\n            .then(data => {\n                if (data.success) {\n                    this.setState({ projects: data.projects });\n                }\n            });\n    }\n\n    render() {\n        const { user, projects } = this.state;\n\n        return (\n            <div className=\"content\">\n                <DashboardHeader />\n                <div>\n                    <h1>Overview</h1>\n\n                    <h3>User</h3>\n                    <ul>\n                        <li>id: {user._id}</li>\n                        <li>\n                            signedUp: {moment(user.signUpDate).fromNow(true)}\n                            ago\n                        </li>\n                        <li>\n                            lastLogin: {moment(user.lastLogin).fromNow(true)}\n                        </li>\n                        <li>email: {user.email}</li>\n                        <li>verified: {user.isVerified ? \"✔\" : \"✘\"}</li>\n                    </ul>\n\n                    <h3>Projects</h3>\n                    <ul>\n                        {projects.map((project, i) => {\n                            return (\n                                <li key={i}>\n                                    <NavLink\n                                        to={`/dashboard/project/${project._id}`}\n                                    >\n                                        {project.title}\n                                    </NavLink>\n                                </li>\n                            );\n                        })}\n                    </ul>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(Overview);\n","import Overview from \"./Overview\";\n\nexport default { Overview };\nexport { Overview };\n","\"use strict\";\n\nimport { withRouter, NavLink } from \"react-router-dom\";\nimport React, { Component } from \"react\";\n\nimport { UserById } from \"./../../../components/Dashboard\";\n\nclass ProjectView extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            project: [],\n            projectToken: \"\"\n        };\n    }\n\n    componentDidMount() {\n        fetch(`/api/Prototype/project/${this.props.match.params.id}`)\n            .then(res => res.json())\n            .then(json => {\n                if (json.success) {\n                    this.setState({ project: json.project }, () => {\n                        this.getToken();\n                    });\n                }\n            });\n    }\n\n    createToken(projectId) {\n        fetch(`/api/Prototype/project/token`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                projectId: projectId\n            })\n        })\n            .then(res => res.json())\n            .then(json => {\n                if (json.success) {\n                    this.setState({ projectToken: json.data.token });\n                }\n            });\n    }\n\n    updateToken(projectId) {\n        fetch(`/api/Prototype/project/token`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                projectId: projectId\n            })\n        })\n            .then(res => res.json())\n            .then(json => {\n                if (json.success) {\n                    this.getToken();\n                }\n            });\n    }\n\n    getToken() {\n        fetch(`/api/Prototype/project/${this.props.match.params.id}/token`)\n            .then(res => res.json())\n            .then(data => {\n                if (data.success) {\n                    console.log(data.data[0].token);\n                    this.setState({ projectToken: data.data[0].token });\n                }\n            });\n    }\n\n    render() {\n        const { project, projectToken } = this.state;\n\n        return (\n            <div className=\"content\">\n                <ul>\n                    <li>\n                        <NavLink exact to=\"/dashboard\">\n                            Dashboard\n                        </NavLink>\n                    </li>\n                </ul>\n                <hr />\n                <div>\n                    {project && (\n                        <div>\n                            <h1>\n                                {project.title} ({project._id})\n                            </h1>\n\n                            <h3>Project Overview</h3>\n                            <ul>\n                                <li>creatorId: {project.creatorId}</li>\n                                <li>\n                                    token:{\" \"}\n                                    {projectToken ? (\n                                        <span>\n                                            {projectToken}\n                                            <button\n                                                onClick={this.updateToken.bind(\n                                                    this,\n                                                    project._id\n                                                )}\n                                            >\n                                                Refresh\n                                            </button>\n                                        </span>\n                                    ) : (\n                                        <button\n                                            onClick={this.createToken.bind(\n                                                this,\n                                                project._id\n                                            )}\n                                        >\n                                            createToken\n                                        </button>\n                                    )}\n                                </li>\n                            </ul>\n\n                            <h3>Team</h3>\n                            <ul>\n                                {project.team &&\n                                    project.team.map((teamMember, i) => {\n                                        return <li key={i}>{teamMember}</li>;\n                                    })}\n                            </ul>\n\n                            <h3>Players</h3>\n                            <div></div>\n\n                            <h3>Notifications</h3>\n                            <div></div>\n\n                            <h3>MessageOfTheDay</h3>\n                            <div></div>\n\n                            <h3>Characters</h3>\n                            <div></div>\n\n                            <h3>Assets</h3>\n                            <div></div>\n\n                            <h3>Translations</h3>\n                            <div></div>\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(ProjectView);\n\n//                                 {/* {project.creatorId && (\n//                                 <UserById userId={project.creatorId} />\n//                             )} */}\n","import ProjectView from \"./ProjectView\";\n\nexport default { ProjectView };\nexport { ProjectView };\n","import { Overview } from \"./Overview\";\nimport { ProjectView } from \"./ProjectView\";\n\nexport default { Overview, ProjectView };\nexport { Overview, ProjectView };\n","\"use strict\";\n\nimport { withRouter, NavLink } from \"react-router-dom\";\nimport React, { Component } from \"react\";\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    componentDidMount() {}\n\n    render() {\n        return (\n            <div>\n                <ul>\n                    <li>\n                        <NavLink exact to=\"/login\">\n                            Login\n                        </NavLink>\n                    </li>\n                    <li>\n                        <NavLink exact to=\"/register\">\n                            Register\n                        </NavLink>\n                    </li>\n                </ul>\n                <hr />\n                <div>\n                    <h1>Homepage</h1>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(Home);\n","import Home from \"./Home\";\n\nexport default { Home };\nexport { Home };\n","\"use strict\";\n\nimport { withRouter, NavLink } from \"react-router-dom\";\nimport React, { Component } from \"react\";\n\nimport { setInStorage } from \"./../../../utils/storage\";\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            token: \"\",\n            loginError: \"\",\n            email: \"\",\n            password: \"\"\n        };\n    }\n\n    handleInputChange(e) {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    }\n\n    onLogin() {\n        const { email, password } = this.state;\n\n        this.setState(\n            {\n                loginError: \"\"\n            },\n            () => {\n                fetch(\"/api/Prototype/user/login\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                        email: email,\n                        password: password\n                    })\n                })\n                    .then(res => res.json())\n                    .then(json => {\n                        if (json.success) {\n                            setInStorage(\"botany-bay\", { token: json.token });\n\n                            this.props.history.push(\"/dashboard\");\n\n                            this.setState({\n                                loginError: json.message,\n                                email: \"\",\n                                password: \"\",\n                                token: json.token\n                            });\n                        } else {\n                            this.setState({\n                                loginError: json.message\n                            });\n                        }\n                    });\n            }\n        );\n    }\n\n    render() {\n        const { email, password, loginError } = this.state;\n\n        return (\n            <div>\n                <ul>\n                    <li>\n                        <NavLink exact to=\"/\">\n                            Home\n                        </NavLink>\n                    </li>\n                </ul>\n                <hr />\n                <div>\n                    <h1>Log-In</h1>\n\n                    <div>\n                        <input\n                            type=\"email\"\n                            name=\"email\"\n                            value={email}\n                            onChange={this.handleInputChange.bind(this)}\n                            placeholder=\"E-mail address\"\n                        />\n                        <br />\n                        <input\n                            placeholder=\"Password\"\n                            type=\"password\"\n                            name=\"password\"\n                            value={password}\n                            onChange={this.handleInputChange.bind(this)}\n                        />\n                        <br />\n                        <button onClick={this.onLogin.bind(this)}>Login</button>\n                    </div>\n\n                    {loginError ? <p>{loginError}</p> : null}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(Login);\n","import Login from \"./Login\";\n\nexport default { Login };\nexport { Login };\n","\"use strict\";\n\nimport { withRouter, NavLink } from \"react-router-dom\";\nimport React, { Component } from \"react\";\n\nclass NotFound extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    componentDidMount() {\n        fetch(\"/api/Prototype/users\")\n            .then(res => res.json())\n            .then(data => {\n                console.log(data);\n            });\n    }\n\n    render() {\n        return (\n            <div>\n                <div>\n                    <h1>404</h1>\n                    <p>Page not found...</p>\n\n                    <NavLink exact to=\"/\">\n                        Home\n                    </NavLink>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(NotFound);\n","import NotFound from \"./NotFound\";\n\nexport default { NotFound };\nexport { NotFound };\n","\"use strict\";\n\nimport { withRouter, NavLink } from \"react-router-dom\";\nimport React, { Component } from \"react\";\n\nclass Register extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            signUpError: \"\",\n            registrationSuccess: false,\n            email: \"\",\n            password: \"\",\n            passwordValidation: \"\"\n        };\n    }\n\n    handleInputChange(e) {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    }\n\n    onSignUp() {\n        const { email, password, passwordValidation } = this.state;\n\n        if (password === passwordValidation) {\n            fetch(\"/api/Prototype/user/register\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    email: email,\n                    password: password\n                })\n            })\n                .then(res => res.json())\n                .then(json => {\n                    if (json.success) {\n                        this.setState({\n                            signUpError: json.message,\n                            registrationSuccess: true,\n                            email: \"\",\n                            password: \"\"\n                        });\n                    } else {\n                        this.setState({\n                            signUpError: json.message\n                        });\n                    }\n                });\n        } else {\n            this.setState({\n                signUpError: \"Passwords did not match!\"\n            });\n        }\n    }\n\n    render() {\n        const {\n            email,\n            password,\n            passwordValidation,\n            registrationSuccess,\n            signUpError\n        } = this.state;\n\n        return (\n            <div>\n                <ul>\n                    <li>\n                        <NavLink exact to=\"/\">\n                            Home\n                        </NavLink>\n                    </li>\n                </ul>\n                <hr />\n                <div>\n                    <h1>Register</h1>\n\n                    <div>\n                        <input\n                            type=\"email\"\n                            name=\"email\"\n                            value={email}\n                            onChange={this.handleInputChange.bind(this)}\n                            placeholder=\"E-mail address\"\n                        />\n                        <br />\n                        <input\n                            placeholder=\"Password\"\n                            type=\"password\"\n                            name=\"password\"\n                            value={password}\n                            onChange={this.handleInputChange.bind(this)}\n                        />\n                        <br />\n                        <input\n                            placeholder=\"Repeat Password\"\n                            type=\"password\"\n                            name=\"passwordValidation\"\n                            value={passwordValidation}\n                            onChange={this.handleInputChange.bind(this)}\n                        />\n                        <br />\n                        <button onClick={this.onSignUp.bind(this)}>\n                            Register\n                        </button>\n                    </div>\n\n                    {registrationSuccess ? (\n                        <p>\n                            Registration Successful, check your emails.&nbsp;\n                            <NavLink exact to=\"/\">\n                                Back to Homepage\n                            </NavLink>\n                        </p>\n                    ) : null}\n                    {signUpError ? <p>{signUpError}</p> : null}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(Register);\n\n/*\n<Form.Input\n                                fluid\n                                type=\"email\"\n                                icon=\"user\"\n                                iconPosition=\"left\"\n                                placeholder=\"E-mail address\"\n                                name=\"email\"\n                                value={email}\n                                onChange={this.handleChange.bind(this)}\n                            />\n                            <Form.Input\n                                fluid\n                                type=\"password\"\n                                icon=\"lock\"\n                                iconPosition=\"left\"\n                                placeholder=\"Password\"\n                                name=\"password\"\n                                value={password}\n                                onChange={this.handleChange.bind(this)}\n                            />\n                            <Form.Input\n                                fluid\n                                type=\"password\"\n                                icon=\"lock\"\n                                iconPosition=\"left\"\n                                placeholder=\"Repeat Password\"\n                                name=\"passwordValidation\"\n                                value={passwordValidation}\n                                onChange={this.handleChange.bind(this)}\n                            />\n                            <Button\n                                color=\"teal\"\n                                fluid\n                                size=\"large\"\n                                onClick={this.onSignUp.bind(this)}\n                            >\n                                Register\n                            </Button>\n*/\n","import Register from \"./Register\";\n\nexport default { Register };\nexport { Register };\n","import { Home } from \"./Home\";\nimport { NotFound } from \"./NotFound\";\nimport { Login } from \"./Login\";\nimport { Register } from \"./Register\";\n\nexport default { Home, NotFound, Login, Register };\nexport { Home, NotFound, Login, Register };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport App from \"./App\";\n\nimport { Home, NotFound, Login, Register } from \"./containers/Page\";\nimport { Overview, ProjectView } from \"./containers/Dashboard\";\n\nReactDOM.render(\n    <Router>\n        <App>\n            <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <Route exact path=\"/login\" component={Login} />\n                <Route exact path=\"/register\" component={Register} />\n                <Route exact path=\"/dashboard\" component={Overview} />\n                <Route\n                    exact\n                    path=\"/dashboard/project/:id\"\n                    component={ProjectView}\n                />\n                <Route component={NotFound} />\n            </Switch>\n        </App>\n    </Router>,\n    document.querySelector(\"#root\")\n);\n","\"use strict\";\n\nexport function getFromStorage(key) {\n    if (!key) {\n        return null;\n    }\n\n    try {\n        const valueStr = localStorage.getItem(key);\n\n        if (valueStr) {\n            return JSON.parse(valueStr);\n        }\n\n        return null;\n    } catch (err) {\n        return null;\n    }\n}\n\nexport function setInStorage(key, obj) {\n    if (!key) {\n        console.error(\"Error: Key is missing\");\n    }\n\n    try {\n        localStorage.setItem(key, JSON.stringify(obj));\n    } catch (err) {\n        console.error(err);\n    }\n}\n"]}